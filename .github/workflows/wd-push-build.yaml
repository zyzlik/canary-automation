name: "[PUSH, WD] Build and Deploy"

on:
  # push:
  #   branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: docker build
        run: |
          docker build . -t zyzlik/canary-automation:latest
      
      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: push
        run: |
          docker push zyzlik/canary-automation:latest
  deploy:
    runs-on: [ubuntu-latest]
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-2
      - name: get hostname
        id: hostname
        run: |
        aws eks update-kubeconfig --name canary-automation
        kubectl config set-context arn:aws:eks:us-east-2:801176112578:cluster/canary-automation
        "::set-output name=hostname::$(kubectl get svc envoy -n projectcontour -o jsonpath='{.status.loadBalancer.ingress[].hostname}')"
      - name: deploy canary
        run: |
          aws eks update-kubeconfig --name canary-automation
          kubectl config set-context arn:aws:eks:us-east-2:801176112578:cluster/canary-automation
         
          # Deploy canary app
          helm upgrade --install --create-namespace \
          --cleanup-on-fail --atomic -n canary-automation \
          --set track=canary --set ingress=false \
          canary-automation-canary ./kubernetes 
      - name: deploy baseline
        run: |
          echo "baseline"
      - name: set up routing
        run: |
          helm upgrade --install --create-namespace \
          --cleanup-on-fail --atomic -n canary-automation \
          --set stable_weight=90 --set canary_weight=10 --set ingress=true \
          --set fqdn=${{ steps.hostname.outputs.hostname }} \
          canary-automation-ingress ./kubernetes
      - name: analyse
        run: |
          # Compare metrics, wait
          sleep 300

          # Increase % of canary
          # Compare metrics, wait
      - name: promote
        run: |
          # Deploy canary as stable
          helm upgrade --install --create-namespace \
          --cleanup-on-fail --atomic -n canary-automation \
          --set track=stable --set ingress=false \
          canary-automation-stable ./kubernetes

          # Set up 100% for stable
          helm upgrade --install --create-namespace \
          --cleanup-on-fail --atomic -n canary-automation \
          --set ingress=true  --set fqdn=${{ steps.hostname.outputs.hostname }} \
          canary-automation-ingress ./kubernetes
